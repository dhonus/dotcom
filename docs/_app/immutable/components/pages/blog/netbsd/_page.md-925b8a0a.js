import{S as ct,i as mt,s as ht,N as bs,w as dt,x as kt,y as vt,O as bt,P as Fs,f as _t,t as wt,z as yt,Q as qs,k as o,q as i,a as f,l as n,m as r,r as p,h as s,c as u,n as h,b as a,F as l,B as gt}from"../../../../chunks/index-837ef9ab.js";import{P as Et}from"../../../../chunks/post-c53b2530.js";function It(H){let c,v,b,d,m,k,x,fe,L,Oe,ue,I,Ys=`<code class="language-shell">$ pkgin <span class="token keyword">in</span> mozilla-rootcerts
$ mozilla-rootcerts <span class="token function">install</span></code>`,ce,M,Ce,me,G,T,Ue,he,O,je,de,C,ze,ke,S,Ws=`<code class="language-shell"> $ <span class="token assign-left variable">PKG_PATH</span><span class="token operator">=</span><span class="token string">"https://cdn.NetBSD.org/pub/pkgsrc/packages/NetBSD/<span class="token variable"><span class="token variable">$(</span><span class="token function">uname</span> <span class="token parameter variable">-p</span><span class="token variable">)</span></span>/<span class="token variable"><span class="token variable">$(</span><span class="token function">uname</span> <span class="token parameter variable">-r</span> <span class="token operator">|</span> <span class="token function">cut</span> <span class="token parameter variable">-d_</span> <span class="token parameter variable">-f1</span><span class="token variable">)</span></span>/All"</span>
 $ <span class="token builtin class-name">export</span> PKG_PATH
 $ pkg_add <span class="token parameter variable">-v</span> pkgin</code>`,ve,U,Fe,be,B,Qs=`<code class="language-shell"> $ <span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /usr/pkg/etc/pkgin
 $ <span class="token function">touch</span> /usr/pkg/etc/pkgin/repositories.conf
 $ <span class="token function">vim</span> /usr/pkg/etc/pkgin/repositories.conf</code>`,_e,j,qe,we,w,y,ee,Ke,Ye,se,We,Qe,Je,g,Ve,z,Ze,es,te,ae,le,ss,ye,F,ts,ge,D,Js=`<code class="language-shell">$ pkg_add <span class="token parameter variable">-v</span> pkgin
$ pkgin update</code>`,Ee,q,as,Ie,E,ls,N,os,ns,Te,P,Vs=`<code class="language-shell">$ <span class="token builtin class-name">cd</span> dwm
$ <span class="token function">make</span></code>`,Se,K,rs,Be,Y,oe,is,De,_,ps,ne,fs,us,re,cs,ms,Ne,W,hs,Pe,R,Zs='<code class="language-shell">$ pkgin <span class="token keyword">in</span> freetype2</code>',Re,Q,ds,Xe,X,et='<code class="language-shell">$ <span class="token function">find</span> / <span class="token parameter variable">-type</span> f <span class="token parameter variable">-name</span> Xlib.h</code>',$e,J,ks,Ae,$,st=`<code class="language-shell">X11INC <span class="token operator">=</span> /usr/X11R6/include   --<span class="token operator">></span>  X11INC <span class="token operator">=</span> /usr/X11R7/include
X11LIB <span class="token operator">=</span> /usr/X11R6/lib  --<span class="token operator">></span> 	X11LIB <span class="token operator">=</span> /usr/X11R7/lib
<span class="token punctuation">..</span>.
FREETYPEINC <span class="token operator">=</span> /usr/X11R7/include/freetype2</code>`,He,V,vs,xe,A,tt=`<code class="language-shell">X11INC <span class="token operator">=</span> /usr/X11R6/include   --<span class="token operator">></span>  X11INC <span class="token operator">=</span> /usr/local/include 
X11LIB <span class="token operator">=</span> /usr/X11R6/lib  --<span class="token operator">></span> 	X11LIB <span class="token operator">=</span> /usr/local/lib
<span class="token punctuation">..</span>.
FREETYPEINC <span class="token operator">=</span> /usr/local/include/freetype2</code>`;return{c(){c=o("h1"),v=i("Useful NetBSD commands to get working installation with DWM"),b=f(),d=o("p"),m=i("I might need this in the future, really don’t want to figure it out again and it’s good website-filler."),k=o("br"),x=i(`
Some things are done quite differently to freebsd and thanks to its smaller userbase it can be hard to get good search results. Here I present some notes I have taken over the course of time I have spent using NetBSD. Also just before we start, note my system specs and make changes to the commands accordingly. i5 6600 (4 cores); AMD RX 570; 8G of ram; no wifi card; B150M-D3H motherboard hence its ethernet.
To avoid typing out all these commands, I made a script to automate them. But you can’t have it. It’s mine. All jokes aside, I haven’t tested it and it would probably just break your installation. The contents, however, are more or less what you will find in this guide.`),fe=f(),L=o("h2"),Oe=i("To fix SSL errors with curl and git"),ue=f(),I=o("pre"),ce=f(),M=o("h2"),Ce=i("Good website to get sauce"),me=f(),G=o("p"),T=o("a"),Ue=i("paedebucher.ch"),he=f(),O=o("h2"),je=i("Get a good mirror"),de=f(),C=o("p"),ze=i("Or watch your computer download at speeds of the 1980s. Most mirrors are pretty horrid… Anyway, you need to run these nice commands."),ke=f(),S=o("pre"),ve=f(),U=o("p"),Fe=i("The following commands after having pkgin installed"),be=f(),B=o("pre"),_e=f(),j=o("p"),qe=i("The file repositories.conf has the a list of your mirrors. At the end of the file add the following:"),we=f(),w=o("ul"),y=o("li"),ee=o("strong"),Ke=i("IMPORTANT!"),Ye=i(" Change the number after …/amd64/ to your version of NetBSD. In my case, I am using 9.1, so I will write in 9.1. Also note that "),se=o("strong"),We=i("amd64 = x86_64"),Qe=i(". Oh the names.  \n* ```http://ftp.netbsd.org/pub/pkgsrc/packages/NetBSD/amd64/9.1/All/```"),Je=f(),g=o("li"),Ve=i("If you are using a different architecture to amd64, visit the website "),z=o("a"),Ze=i("http://ftp.netbsd.org/pub/pkgsrc/packages/NetBSD/"),es=i(" in your browser and find your actual architecture and use its link that looks like the one above. Then export the same link like this:"),te=o("ul"),ae=o("li"),le=o("code"),ss=i("$ export PKG_PATH=”http://ftp.netbsd.org/pub/pkgsrc/packages/NetBSD/amd64/9.1/All/"),ye=f(),F=o("p"),ts=i("You can then install the pkgin package manager and use it from then onwards, your mirrors should work fine now. Remember to change the number when you upgrade to a new version of NetBSD."),ge=f(),D=o("pre"),Ee=f(),q=o("h2"),as=i("dwm won’t compile"),Ie=f(),E=o("p"),ls=i("This is to be expected, GNU/Linux and BSDs are different systems. Thankfully the suckless devs, "),N=o("a"),os=i("although apparently Nazis"),ns=i(", are really good programmers and only a few things will have to change."),Te=f(),P=o("pre"),Se=f(),K=o("h4"),rs=i("drw.c:5:10: fatal error: ‘X11/Xlib.h’ file not found"),Be=f(),Y=o("p"),oe=o("code"),is=i("#include <X11/Xlib.h>"),De=f(),_=o("p"),ps=i("If you’ve used dwm on freeBSD or openBSD, you may be used to changing the location of the X11R6 header files to "),ne=o("em"),fs=i("local"),us=i(" in the "),re=o("strong"),cs=i("config.mk"),ms=i(" file. This file, located inside your dwm folder needs these variables changed, but in a way that is different to open and freebsd."),Ne=f(),W=o("p"),hs=i("Install freetype2, you will need it:"),Pe=f(),R=o("pre"),Re=f(),Q=o("h3"),ds=i("Use this command to find the missing file."),Xe=f(),X=o("pre"),$e=f(),J=o("h2"),ks=i("NetBSD"),Ae=f(),$=o("pre"),He=f(),V=o("h2"),vs=i("FreeBSD"),xe=f(),A=o("pre"),this.h()},l(e){c=n(e,"H1",{});var t=r(c);v=p(t,"Useful NetBSD commands to get working installation with DWM"),t.forEach(s),b=u(e),d=n(e,"P",{});var Le=r(d);m=p(Le,"I might need this in the future, really don’t want to figure it out again and it’s good website-filler."),k=n(Le,"BR",{}),x=p(Le,`
Some things are done quite differently to freebsd and thanks to its smaller userbase it can be hard to get good search results. Here I present some notes I have taken over the course of time I have spent using NetBSD. Also just before we start, note my system specs and make changes to the commands accordingly. i5 6600 (4 cores); AMD RX 570; 8G of ram; no wifi card; B150M-D3H motherboard hence its ethernet.
To avoid typing out all these commands, I made a script to automate them. But you can’t have it. It’s mine. All jokes aside, I haven’t tested it and it would probably just break your installation. The contents, however, are more or less what you will find in this guide.`),Le.forEach(s),fe=u(e),L=n(e,"H2",{});var _s=r(L);Oe=p(_s,"To fix SSL errors with curl and git"),_s.forEach(s),ue=u(e),I=n(e,"PRE",{class:!0});var at=r(I);at.forEach(s),ce=u(e),M=n(e,"H2",{});var ws=r(M);Ce=p(ws,"Good website to get sauce"),ws.forEach(s),me=u(e),G=n(e,"P",{});var ys=r(G);T=n(ys,"A",{href:!0,rel:!0});var gs=r(T);Ue=p(gs,"paedebucher.ch"),gs.forEach(s),ys.forEach(s),he=u(e),O=n(e,"H2",{});var Es=r(O);je=p(Es,"Get a good mirror"),Es.forEach(s),de=u(e),C=n(e,"P",{});var Is=r(C);ze=p(Is,"Or watch your computer download at speeds of the 1980s. Most mirrors are pretty horrid… Anyway, you need to run these nice commands."),Is.forEach(s),ke=u(e),S=n(e,"PRE",{class:!0});var lt=r(S);lt.forEach(s),ve=u(e),U=n(e,"P",{});var Ts=r(U);Fe=p(Ts,"The following commands after having pkgin installed"),Ts.forEach(s),be=u(e),B=n(e,"PRE",{class:!0});var ot=r(B);ot.forEach(s),_e=u(e),j=n(e,"P",{});var Ss=r(j);qe=p(Ss,"The file repositories.conf has the a list of your mirrors. At the end of the file add the following:"),Ss.forEach(s),we=u(e),w=n(e,"UL",{});var Me=r(w);y=n(Me,"LI",{});var ie=r(y);ee=n(ie,"STRONG",{});var Bs=r(ee);Ke=p(Bs,"IMPORTANT!"),Bs.forEach(s),Ye=p(ie," Change the number after …/amd64/ to your version of NetBSD. In my case, I am using 9.1, so I will write in 9.1. Also note that "),se=n(ie,"STRONG",{});var Ds=r(se);We=p(Ds,"amd64 = x86_64"),Ds.forEach(s),Qe=p(ie,". Oh the names.  \n* ```http://ftp.netbsd.org/pub/pkgsrc/packages/NetBSD/amd64/9.1/All/```"),ie.forEach(s),Je=u(Me),g=n(Me,"LI",{});var pe=r(g);Ve=p(pe,"If you are using a different architecture to amd64, visit the website "),z=n(pe,"A",{href:!0});var Ns=r(z);Ze=p(Ns,"http://ftp.netbsd.org/pub/pkgsrc/packages/NetBSD/"),Ns.forEach(s),es=p(pe," in your browser and find your actual architecture and use its link that looks like the one above. Then export the same link like this:"),te=n(pe,"UL",{});var Ps=r(te);ae=n(Ps,"LI",{});var Rs=r(ae);le=n(Rs,"CODE",{});var Xs=r(le);ss=p(Xs,"$ export PKG_PATH=”http://ftp.netbsd.org/pub/pkgsrc/packages/NetBSD/amd64/9.1/All/"),Xs.forEach(s),Rs.forEach(s),Ps.forEach(s),pe.forEach(s),Me.forEach(s),ye=u(e),F=n(e,"P",{});var $s=r(F);ts=p($s,"You can then install the pkgin package manager and use it from then onwards, your mirrors should work fine now. Remember to change the number when you upgrade to a new version of NetBSD."),$s.forEach(s),ge=u(e),D=n(e,"PRE",{class:!0});var nt=r(D);nt.forEach(s),Ee=u(e),q=n(e,"H2",{});var As=r(q);as=p(As,"dwm won’t compile"),As.forEach(s),Ie=u(e),E=n(e,"P",{});var Ge=r(E);ls=p(Ge,"This is to be expected, GNU/Linux and BSDs are different systems. Thankfully the suckless devs, "),N=n(Ge,"A",{href:!0,rel:!0});var Hs=r(N);os=p(Hs,"although apparently Nazis"),Hs.forEach(s),ns=p(Ge,", are really good programmers and only a few things will have to change."),Ge.forEach(s),Te=u(e),P=n(e,"PRE",{class:!0});var rt=r(P);rt.forEach(s),Se=u(e),K=n(e,"H4",{});var xs=r(K);rs=p(xs,"drw.c:5:10: fatal error: ‘X11/Xlib.h’ file not found"),xs.forEach(s),Be=u(e),Y=n(e,"P",{});var Ls=r(Y);oe=n(Ls,"CODE",{});var Ms=r(oe);is=p(Ms,"#include <X11/Xlib.h>"),Ms.forEach(s),Ls.forEach(s),De=u(e),_=n(e,"P",{});var Z=r(_);ps=p(Z,"If you’ve used dwm on freeBSD or openBSD, you may be used to changing the location of the X11R6 header files to "),ne=n(Z,"EM",{});var Gs=r(ne);fs=p(Gs,"local"),Gs.forEach(s),us=p(Z," in the "),re=n(Z,"STRONG",{});var Os=r(re);cs=p(Os,"config.mk"),Os.forEach(s),ms=p(Z," file. This file, located inside your dwm folder needs these variables changed, but in a way that is different to open and freebsd."),Z.forEach(s),Ne=u(e),W=n(e,"P",{});var Cs=r(W);hs=p(Cs,"Install freetype2, you will need it:"),Cs.forEach(s),Pe=u(e),R=n(e,"PRE",{class:!0});var it=r(R);it.forEach(s),Re=u(e),Q=n(e,"H3",{});var Us=r(Q);ds=p(Us,"Use this command to find the missing file."),Us.forEach(s),Xe=u(e),X=n(e,"PRE",{class:!0});var pt=r(X);pt.forEach(s),$e=u(e),J=n(e,"H2",{});var js=r(J);ks=p(js,"NetBSD"),js.forEach(s),Ae=u(e),$=n(e,"PRE",{class:!0});var ft=r($);ft.forEach(s),He=u(e),V=n(e,"H2",{});var zs=r(V);vs=p(zs,"FreeBSD"),zs.forEach(s),xe=u(e),A=n(e,"PRE",{class:!0});var ut=r(A);ut.forEach(s),this.h()},h(){h(I,"class","language-shell"),h(T,"href","https://paedubucher.ch/articles/2020-08-11-freebsd-on-the-desktop.html"),h(T,"rel","nofollow"),h(S,"class","language-shell"),h(B,"class","language-shell"),h(z,"href","http://ftp.netbsd.org/pub/pkgsrc/packages/NetBSD/"),h(D,"class","language-shell"),h(N,"href","https://news.ycombinator.com/item?id=20845633"),h(N,"rel","nofollow"),h(P,"class","language-shell"),h(R,"class","language-shell"),h(X,"class","language-shell"),h($,"class","language-shell"),h(A,"class","language-shell")},m(e,t){a(e,c,t),l(c,v),a(e,b,t),a(e,d,t),l(d,m),l(d,k),l(d,x),a(e,fe,t),a(e,L,t),l(L,Oe),a(e,ue,t),a(e,I,t),I.innerHTML=Ys,a(e,ce,t),a(e,M,t),l(M,Ce),a(e,me,t),a(e,G,t),l(G,T),l(T,Ue),a(e,he,t),a(e,O,t),l(O,je),a(e,de,t),a(e,C,t),l(C,ze),a(e,ke,t),a(e,S,t),S.innerHTML=Ws,a(e,ve,t),a(e,U,t),l(U,Fe),a(e,be,t),a(e,B,t),B.innerHTML=Qs,a(e,_e,t),a(e,j,t),l(j,qe),a(e,we,t),a(e,w,t),l(w,y),l(y,ee),l(ee,Ke),l(y,Ye),l(y,se),l(se,We),l(y,Qe),l(w,Je),l(w,g),l(g,Ve),l(g,z),l(z,Ze),l(g,es),l(g,te),l(te,ae),l(ae,le),l(le,ss),a(e,ye,t),a(e,F,t),l(F,ts),a(e,ge,t),a(e,D,t),D.innerHTML=Js,a(e,Ee,t),a(e,q,t),l(q,as),a(e,Ie,t),a(e,E,t),l(E,ls),l(E,N),l(N,os),l(E,ns),a(e,Te,t),a(e,P,t),P.innerHTML=Vs,a(e,Se,t),a(e,K,t),l(K,rs),a(e,Be,t),a(e,Y,t),l(Y,oe),l(oe,is),a(e,De,t),a(e,_,t),l(_,ps),l(_,ne),l(ne,fs),l(_,us),l(_,re),l(re,cs),l(_,ms),a(e,Ne,t),a(e,W,t),l(W,hs),a(e,Pe,t),a(e,R,t),R.innerHTML=Zs,a(e,Re,t),a(e,Q,t),l(Q,ds),a(e,Xe,t),a(e,X,t),X.innerHTML=et,a(e,$e,t),a(e,J,t),l(J,ks),a(e,Ae,t),a(e,$,t),$.innerHTML=st,a(e,He,t),a(e,V,t),l(V,vs),a(e,xe,t),a(e,A,t),A.innerHTML=tt},p:gt,d(e){e&&s(c),e&&s(b),e&&s(d),e&&s(fe),e&&s(L),e&&s(ue),e&&s(I),e&&s(ce),e&&s(M),e&&s(me),e&&s(G),e&&s(he),e&&s(O),e&&s(de),e&&s(C),e&&s(ke),e&&s(S),e&&s(ve),e&&s(U),e&&s(be),e&&s(B),e&&s(_e),e&&s(j),e&&s(we),e&&s(w),e&&s(ye),e&&s(F),e&&s(ge),e&&s(D),e&&s(Ee),e&&s(q),e&&s(Ie),e&&s(E),e&&s(Te),e&&s(P),e&&s(Se),e&&s(K),e&&s(Be),e&&s(Y),e&&s(De),e&&s(_),e&&s(Ne),e&&s(W),e&&s(Pe),e&&s(R),e&&s(Re),e&&s(Q),e&&s(Xe),e&&s(X),e&&s($e),e&&s(J),e&&s(Ae),e&&s($),e&&s(He),e&&s(V),e&&s(xe),e&&s(A)}}}function Tt(H){let c,v;const b=[H[0],Ks];let d={$$slots:{default:[It]},$$scope:{ctx:H}};for(let m=0;m<b.length;m+=1)d=bs(d,b[m]);return c=new Et({props:d}),{c(){dt(c.$$.fragment)},l(m){kt(c.$$.fragment,m)},m(m,k){vt(c,m,k),v=!0},p(m,[k]){const x=k&1?bt(b,[k&1&&Fs(m[0]),k&0&&Fs(Ks)]):{};k&2&&(x.$$scope={dirty:k,ctx:m}),c.$set(x)},i(m){v||(_t(c.$$.fragment,m),v=!0)},o(m){wt(c.$$.fragment,m),v=!1},d(m){yt(c,m)}}}const Ks={title:"Useful NetBSD commands to get a working installation with DWM",date:"2022-12-16",thumbnail:"bsd.jpg"};function St(H,c,v){return H.$$set=b=>{v(0,c=bs(bs({},c),qs(b)))},c=qs(c),[c]}class Nt extends ct{constructor(c){super(),mt(this,c,St,Tt,ht,{})}}export{Nt as default,Ks as metadata};
